spring:
  application:
    name: ${USER_NAME}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB

  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${USER_NAME}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

server:
  port: ${USER_PORT}
  
s3:
  credentials:
    access-key: ${S3_ACCESS_KEY}
    secret-key: ${S3_SECRET_KEY}
    region: ap-northeast-2
  bucket: ${S3_BUCKET}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST}:${EUREKA_PORT}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  endpoint:
    health:
      show-details: always
  zipkin:
    tracing:
      endpoint: "http://${ZIPKIN_HOST}:${ZIPKIN_PORT}"
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3_multi
